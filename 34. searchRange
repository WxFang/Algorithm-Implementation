public class Solution {
    public int[] searchRange(int[] nums, int target) {
        int s = 0, e = nums.length - 1, lo = 0, hi = nums.length - 1;
        if(nums.length == 0) return new int[]{-1, -1};
        
        // get left bound
        while(lo < hi){
            int mid = (lo + hi) / 2;
            if(nums[mid] < target) lo = mid + 1;
            else if(nums[mid] > target) hi = mid - 1;
            else hi = mid;
            if(nums[lo] == target){
                s = lo;
                break;
            }
        }

        // get right bound
        hi = nums.length - 1;
        while(lo < hi){
            int mid = (lo + hi) / 2 + 1;
            if(nums[mid] < target) lo = mid + 1;
            else if(nums[mid] > target) hi = mid - 1;
            else lo = mid;
            if(nums[hi] == target){
                e = hi;
                break;
            }
        }
        
        if(nums[s] != target && nums[e] != target) return new int[]{-1, -1};
        return new int[]{s, e};
    }
}