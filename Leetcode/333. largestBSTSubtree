class Solution {
    private int max = 1;
    public int largestBSTSubtree(TreeNode root) {
        if(root == null) return 0;
        helper(root);
        return max;
    }
    private int[] helper(TreeNode root){
        if(root == null) return new int[]{Integer.MAX_VALUE, Integer.MIN_VALUE, 0};
        int[] res = new int[]{root.val, root.val, 1};
        int[] left = helper(root.left);
        int[] right = helper(root.right);
        if(left[1] < root.val){
            res[2] += left[2];    
            res[0] = Math.min(res[0], left[0]);
        }
        else
            res[2] = Integer.MIN_VALUE;
        if(right[0] > root.val){
            res[2] += right[2];
            res[1] = Math.max(res[1], right[1]);
        }
        else 
            res[2] = Integer.MIN_VALUE;
        max = Math.max(max, res[2]);
        return res;
    }
}