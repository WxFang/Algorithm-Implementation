/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null) return null;
        Stack<Integer> st1 = new Stack<Integer>();
        Stack<Integer> st2 = new Stack<Integer>();
        while(l1 != null){
            st1.push(l1.val);
            l1 = l1.next;
        }
        while(l2 != null){
            st2.push(l2.val);
            l2 = l2.next;
        }
        int carry = 0;
        ListNode dummy = new ListNode(0);
        while(!st1.isEmpty() || !st2.isEmpty() || carry != 0){
            if(!st1.isEmpty())
                carry += st1.pop();
            if(!st2.isEmpty())
                carry += st2.pop();
            ListNode temp = new ListNode(carry % 10);
            carry = carry / 10;
            temp.next = dummy.next;
            dummy.next = temp;
        }
        return dummy.next;
    }
}