/*Corner Case
When curr1 is -1 and curr2 >= 0
The only matter condition is curr2>=0. When curr2<0 loop should stop.
Like:
[0]
[1]  --> [1]

[1 2 3 0 0 0]
[2 5 6]  --> [1 2 2 3 5 6]
*/

/*smart code*/
public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int curr1 = m-1, curr2 = n-1, start = m+n-1;
        while(curr2>=0)
            nums1[start--] = curr1>=0&&nums1[curr1]>nums2[curr2] ? nums1[curr1--] : nums2[curr2--];
    }
}




/*primitive code*/
public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int curr1 = m-1, curr2 = n-1, start = m+n-1;
        while(curr1>=0 && curr2>=0){
            if(nums1[curr1] > nums2[curr2]) nums1[start--] = nums1[curr1--];
            else nums1[start--] = nums2[curr2--];
        }
        while(curr2>=0){
            nums1[start--] = nums2[curr2--];
        }
    }
}