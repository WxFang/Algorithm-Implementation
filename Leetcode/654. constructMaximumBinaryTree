/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        if(nums.length == 0) return null;
        return helper(nums, 0, nums.length - 1);
    }
    private TreeNode helper(int[] nums, int left, int right){
        if(left == right) return new TreeNode(nums[left]);
        int max = nums[left], idx = left;
        for(int i = left; i <= right; i++){
            if(max < nums[i]){
                max = nums[i];
                idx = i;
            }
        }
        TreeNode root = new TreeNode(max);
        root.left = idx == left ? null : helper(nums, left, idx - 1);
        root.right = idx == right ? null : helper(nums, idx + 1, right);
        return root;
    }
}